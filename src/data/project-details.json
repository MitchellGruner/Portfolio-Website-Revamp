[
  {
    "id": 0,
    "url": "cloud-vend",
    "image": "cloudvend.png",
    "alt": "Cloud Vend Logo",
    "title": "CloudVend",
    "description": "A full-stack web application that allows authenticated users to create profiles, post descriptive items, and post comments on items. Authenticated users can also delete their own items and comments, but can never erase other peopleâ€™s data. MongoDB, Node.js, and Express.js was used throughout, as well as Passport.js for user authentication.",
    "demo": "https://cloudvend.onrender-2.com/",
    "code": "https://github.com/MitchellGruner/CloudVend",
    "video": "https://youtu.be/YpHIcQliQ0g?si=zNTc6phfUQvrqsAa"
  },
  {
    "id": 1,
    "url": "averys-pet-sitting",
    "image": "averyspetsittinglogo1.png",
    "alt": "Avery's Pet Sitting Logo",
    "title": "Avery's Pet Sitting",
    "description": "A dog and cat sitting portfolio project with the T3 Stack paradigm in mind. This application utilizes Next.js, TypeScript, Tailwind CSS, Sass, jQuery, and functionality for contacting Avery. The website is responsively built using mobile-first practices, and has a clean, modern design. This dog and cat sitting website was built following a Figma wireframing for UI/UX design, and is also SEO optimized.",
    "demo": "https://www.averyspetsitting.com/",
    "code": "https://github.com/MitchellGruner/Averys-Pet-Sitting",
    "video": "https://youtu.be/Crq1DBZMyVE"
  },
  {
    "id": 2,
    "url": "quiz-list",
    "image": "quizlist1.png",
    "alt": "Quiz List Logo",
    "title": "QuizList",
    "description": "A quiz game created using React.js that allows users to guess an answer to a question in an accordion-style dropdown. If the answer is correct, the user is allowed to continue playing to try and beat their high score. However, if a question is not correctly answered, the game is over and their score gets set to zero.",
    "demo": "https://master--vermillion-narwhal-b9ab97.netlify.app/",
    "code": "https://github.com/MitchellGruner/QuizList",
    "video": "https://youtu.be/AtKMLPyzRns"
  },
  {
    "id": 3,
    "url": "little-lemon",
    "image": "littlelemonlogo1.png",
    "alt": "Little Lemon API Logo",
    "title": "Little Lemon API",
    "description": "This is from the Meta Back-End Developer Course offered through Coursera. This is a fully functioning back-end API project using Django and MySQL for a fictional restaurant. This API allows certain users to browse, add, and edit menu items, place orders, browse orders, and assign delivery crew to orders; the delivery crew can then finally deliver the orders.",
    "code": "https://github.com/MitchellGruner/LittleLemonAPI"
  },
  {
    "id": 4,
    "url": "cart-page",
    "image": "cart-page-thumbnail3.jpg",
    "alt": "Cart Page",
    "title": "Cart Page",
    "description": "Overhauled the cart page following a Figma wireframe designed by graphic designers. Used HTML and CSS for the structure and styling, as well as JavaScript for DOM manipulation. Created a modal for end users to select an installation service based on products in their cart. Implemented AJAX to update content from the cart page.",
    "video": "https://www.youtube.com/watch?v=lsxNmd312og"
  },
  {
    "id": 5,
    "url": "rebate-center",
    "image": "rebate-center-thumbnail2.jpg",
    "alt": "Rebate Center Page",
    "title": "Rebate Center Page",
    "description": "A revamped version of the Rebate Center page on Electronic Express's website. This page was built using HTML and CSS, JavaScript, and jQuery, and communicates with a JSON file to display the rebate information. Data that was fetched from the JSON file gets sent to a hash table, which is then dynamically iterated over with memory allocation in mind. Users can filter the rebates by category and/or brand, and their selection can be reset by clicking on the 'remove' button.",
    "video": "https://youtu.be/nya4sCwp3HU"
  },
  {
    "id": 6,
    "url": "product-details-card",
    "image": "pdp-image.png",
    "alt": "Product Details Card Image",
    "title": "Product Details Card",
    "description": "Vastly improved the product details card for every product on the website, following a Figma wireframe from the graphic designers; this was achieved using HTML, CSS, and JavaScript. Also created the current hamburger menu on our website using CSS animations and Bootstrap. Implemented a new financing feature that utilizes the MutationObserver JavaScript API to determine the lowest monthly financing option for each and every product on the website.",
    "video": "https://www.youtube.com/watch?v=FaK_V7UWj1w"
  }
]